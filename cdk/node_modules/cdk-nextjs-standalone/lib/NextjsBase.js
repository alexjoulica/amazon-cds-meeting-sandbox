"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildErrorResponsesFor404ErrorPage = exports.buildErrorResponsesForRedirectToIndex = void 0;
/////////////////////
// Helper Functions
/////////////////////
function buildErrorResponsesForRedirectToIndex(indexPage) {
    return [
        {
            httpStatus: 403,
            responsePagePath: `/${indexPage}`,
            responseHttpStatus: 200,
        },
        {
            httpStatus: 404,
            responsePagePath: `/${indexPage}`,
            responseHttpStatus: 200,
        },
    ];
}
exports.buildErrorResponsesForRedirectToIndex = buildErrorResponsesForRedirectToIndex;
function buildErrorResponsesFor404ErrorPage(errorPage) {
    return [
        {
            httpStatus: 403,
            responsePagePath: `/${errorPage}`,
        },
        {
            httpStatus: 404,
            responsePagePath: `/${errorPage}`,
        },
    ];
}
exports.buildErrorResponsesFor404ErrorPage = buildErrorResponsesFor404ErrorPage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTmV4dGpzQmFzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9OZXh0anNCYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQWdIQSxxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CLHFCQUFxQjtBQUVyQixTQUFnQixxQ0FBcUMsQ0FBQyxTQUFpQjtJQUNyRSxPQUFPO1FBQ0w7WUFDRSxVQUFVLEVBQUUsR0FBRztZQUNmLGdCQUFnQixFQUFFLElBQUksU0FBUyxFQUFFO1lBQ2pDLGtCQUFrQixFQUFFLEdBQUc7U0FDeEI7UUFDRDtZQUNFLFVBQVUsRUFBRSxHQUFHO1lBQ2YsZ0JBQWdCLEVBQUUsSUFBSSxTQUFTLEVBQUU7WUFDakMsa0JBQWtCLEVBQUUsR0FBRztTQUN4QjtLQUNGLENBQUM7QUFDSixDQUFDO0FBYkQsc0ZBYUM7QUFFRCxTQUFnQixrQ0FBa0MsQ0FBQyxTQUFpQjtJQUNsRSxPQUFPO1FBQ0w7WUFDRSxVQUFVLEVBQUUsR0FBRztZQUNmLGdCQUFnQixFQUFFLElBQUksU0FBUyxFQUFFO1NBQ2xDO1FBQ0Q7WUFDRSxVQUFVLEVBQUUsR0FBRztZQUNmLGdCQUFnQixFQUFFLElBQUksU0FBUyxFQUFFO1NBQ2xDO0tBQ0YsQ0FBQztBQUNKLENBQUM7QUFYRCxnRkFXQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElDZXJ0aWZpY2F0ZSB9IGZyb20gJ2F3cy1jZGstbGliL2F3cy1jZXJ0aWZpY2F0ZW1hbmFnZXInO1xuaW1wb3J0IHsgRXJyb3JSZXNwb25zZSB9IGZyb20gJ2F3cy1jZGstbGliL2F3cy1jbG91ZGZyb250JztcbmltcG9ydCB7IElIb3N0ZWRab25lIH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLXJvdXRlNTMnO1xuXG5leHBvcnQgdHlwZSBDb21wcmVzc2lvbkxldmVsID0gMCB8IDEgfCAyIHwgMyB8IDQgfCA1IHwgNiB8IDcgfCA4IHwgOTtcblxuLyoqXG4gKiBDb21tb24gcHJvcHMgc2hhcmVkIGFjcm9zcyBOZXh0SlMtcmVsYXRlZCBDREsgY29uc3RydWN0cy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBOZXh0anNCYXNlUHJvcHMge1xuICAvKipcbiAgICogUmVsYXRpdmUgcGF0aCB0byB0aGUgZGlyZWN0b3J5IHdoZXJlIHRoZSBOZXh0SlMgcHJvamVjdCBpcyBsb2NhdGVkLlxuICAgKiBDYW4gYmUgdGhlIHJvb3Qgb2YgeW91ciBwcm9qZWN0IChgLmApIG9yIGEgc3ViZGlyZWN0b3J5IChgcGFja2FnZXMvd2ViYCkuXG4gICAqL1xuICByZWFkb25seSBuZXh0anNQYXRoOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBkaXJlY3RvcnkgdG8gZXhlY3V0ZSBgbnBtIHJ1biBidWlsZGAgZnJvbS4gQnkgZGVmYXVsdCwgaXQgaXMgYG5leHRqc1BhdGhgLlxuICAgKiBDYW4gYmUgb3ZlcnJpZGRlbiwgcGFydGljdWxhcmx5IHVzZWZ1bCBmb3IgbW9ub3JlcG9zIHdoZXJlIGBidWlsZGAgaXMgZXhwZWN0ZWQgdG8gcnVuXG4gICAqIGF0IHRoZSByb290IG9mIHRoZSBwcm9qZWN0LlxuICAgKi9cbiAgcmVhZG9ubHkgYnVpbGRQYXRoPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBSb290IG9mIHlvdXIgcHJvamVjdCwgaWYgZGlmZmVyZW50IGZyb20gYG5leHRqc1BhdGhgLlxuICAgKiBEZWZhdWx0cyB0byBjdXJyZW50IHdvcmtpbmcgZGlyZWN0b3J5LlxuICAgKi9cbiAgcmVhZG9ubHkgcHJvamVjdFJvb3Q/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEN1c3RvbSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdG8gcGFzcyB0byB0aGUgTmV4dEpTIGJ1aWxkIGFuZCBydW50aW1lLlxuICAgKi9cbiAgcmVhZG9ubHkgZW52aXJvbm1lbnQ/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+O1xuXG4gIC8qKlxuICAgKiBTa2lwIGJ1aWxkaW5nIGFwcCBhbmQgZGVwbG95IGEgcGxhY2Vob2xkZXIuXG4gICAqIFVzZWZ1bCB3aGVuIHVzaW5nIGBuZXh0IGRldmAgZm9yIGxvY2FsIGRldmVsb3BtZW50LlxuICAgKi9cbiAgcmVhZG9ubHkgaXNQbGFjZWhvbGRlcj86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIERpcmVjdG9yeSB0byBzdG9yZSB0ZW1wb3JhcnkgYnVpbGQgZmlsZXMgaW4uXG4gICAqIERlZmF1bHRzIHRvIG9zLnRtcGRpcigpLlxuICAgKi9cbiAgcmVhZG9ubHkgdGVtcEJ1aWxkRGlyPzogc3RyaW5nOyAvLyBtb3ZlIHRvIE5leHRqc0J1aWxkUHJvcHM/XG5cbiAgLyoqXG4gICAqIE9wdGlvbmFsIHZhbHVlIGZvciBOT0RFX0VOViBkdXJpbmcgYnVpbGQgYW5kIHJ1bnRpbWUuXG4gICAqL1xuICByZWFkb25seSBub2RlRW52Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiAwIC0gbm8gY29tcHJlc3Npb24sIGZhdGVzdFxuICAgKiA5IC0gbWF4aW11bSBjb21wcmVzc2lvbiwgc2xvd2VzdFxuICAgKiBAZGVmYXVsdCAxXG4gICAqL1xuICByZWFkb25seSBjb21wcmVzc2lvbkxldmVsPzogQ29tcHJlc3Npb25MZXZlbDtcblxuICAvKipcbiAgICogTGVzcyBidWlsZCBvdXRwdXQuXG4gICAqL1xuICByZWFkb25seSBxdWlldD86IGJvb2xlYW47XG59XG5cbi8vLy8vIHN0dWZmIGJlbG93IHRha2VuIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL3NlcnZlcmxlc3Mtc3RhY2svc3N0L2Jsb2IvOGQzNzdlOTQxNDY3Y2VkODFkOGNjMzFlZTY3ZDVhMDY1NTBmMDRkNC9wYWNrYWdlcy9yZXNvdXJjZXMvc3JjL0Jhc2VTaXRlLnRzXG5cbmV4cG9ydCBpbnRlcmZhY2UgQmFzZVNpdGVEb21haW5Qcm9wcyB7XG4gIC8qKlxuICAgKiBUaGUgZG9tYWluIHRvIGJlIGFzc2lnbmVkIHRvIHRoZSB3ZWJzaXRlIFVSTCAoaWUuIGRvbWFpbi5jb20pLlxuICAgKlxuICAgKiBTdXBwb3J0cyBkb21haW5zIHRoYXQgYXJlIGhvc3RlZCBlaXRoZXIgb24gW1JvdXRlIDUzXShodHRwczovL2F3cy5hbWF6b24uY29tL3JvdXRlNTMvKSBvciBleHRlcm5hbGx5LlxuICAgKi9cbiAgcmVhZG9ubHkgZG9tYWluTmFtZTogc3RyaW5nO1xuICAvKipcbiAgICogQW4gYWx0ZXJuYXRpdmUgZG9tYWluIHRvIGJlIGFzc2lnbmVkIHRvIHRoZSB3ZWJzaXRlIFVSTC4gVmlzaXRvcnMgdG8gdGhlIGFsaWFzIHdpbGwgYmUgcmVkaXJlY3RlZCB0byB0aGUgbWFpbiBkb21haW4uIChpZS4gYHd3dy5kb21haW4uY29tYCkuXG4gICAqXG4gICAqIFVzZSB0aGlzIHRvIGNyZWF0ZSBhIGB3d3cuYCB2ZXJzaW9uIG9mIHlvdXIgZG9tYWluIGFuZCByZWRpcmVjdCB2aXNpdG9ycyB0byB0aGUgcm9vdCBkb21haW4uXG4gICAqL1xuICByZWFkb25seSBkb21haW5BbGlhcz86IHN0cmluZztcbiAgLyoqXG4gICAqIFNwZWNpZnkgYWRkaXRpb25hbCBuYW1lcyB0aGF0IHNob3VsZCByb3V0ZSB0byB0aGUgQ2xvdWRmcm9udCBEaXN0cmlidXRpb24uIE5vdGUsIGNlcnRpZmljYXRlcyBmb3IgdGhlc2UgbmFtZXMgd2lsbCBub3QgYmUgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgc28gdGhlIGBjZXJ0aWZpY2F0ZWAgb3B0aW9uIG11c3QgYmUgc3BlY2lmaWVkLlxuICAgKi9cbiAgcmVhZG9ubHkgYWx0ZXJuYXRlTmFtZXM/OiBzdHJpbmdbXTtcbiAgLyoqXG4gICAqIFNldCB0aGlzIG9wdGlvbiBpZiB0aGUgZG9tYWluIGlzIG5vdCBob3N0ZWQgb24gQW1hem9uIFJvdXRlIDUzLlxuICAgKi9cbiAgcmVhZG9ubHkgaXNFeHRlcm5hbERvbWFpbj86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEltcG9ydCB0aGUgdW5kZXJseWluZyBSb3V0ZSA1MyBob3N0ZWQgem9uZS5cbiAgICovXG4gIHJlYWRvbmx5IGhvc3RlZFpvbmU/OiBJSG9zdGVkWm9uZTtcbiAgLyoqXG4gICAqIEltcG9ydCB0aGUgY2VydGlmaWNhdGUgZm9yIHRoZSBkb21haW4uIEJ5IGRlZmF1bHQsIFNTVCB3aWxsIGNyZWF0ZSBhIGNlcnRpZmljYXRlIHdpdGggdGhlIGRvbWFpbiBuYW1lLiBUaGUgY2VydGlmaWNhdGUgd2lsbCBiZSBjcmVhdGVkIGluIHRoZSBgdXMtZWFzdC0xYChOLiBWaXJnaW5pYSkgcmVnaW9uIGFzIHJlcXVpcmVkIGJ5IEFXUyBDbG91ZEZyb250LlxuICAgKlxuICAgKiBTZXQgdGhpcyBvcHRpb24gaWYgeW91IGhhdmUgYW4gZXhpc3RpbmcgY2VydGlmaWNhdGUgaW4gdGhlIGB1cy1lYXN0LTFgIHJlZ2lvbiBpbiBBV1MgQ2VydGlmaWNhdGUgTWFuYWdlciB5b3Ugd2FudCB0byB1c2UuXG4gICAqL1xuICByZWFkb25seSBjZXJ0aWZpY2F0ZT86IElDZXJ0aWZpY2F0ZTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCYXNlU2l0ZVJlcGxhY2VQcm9wcyB7XG4gIHJlYWRvbmx5IGZpbGVzOiBzdHJpbmc7XG4gIHJlYWRvbmx5IHNlYXJjaDogc3RyaW5nO1xuICByZWFkb25seSByZXBsYWNlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmFzZVNpdGVFbnZpcm9ubWVudE91dHB1dHNJbmZvIHtcbiAgcmVhZG9ubHkgcGF0aDogc3RyaW5nO1xuICByZWFkb25seSBzdGFjazogc3RyaW5nO1xuICByZWFkb25seSBlbnZpcm9ubWVudE91dHB1dHM6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH07XG59XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gSGVscGVyIEZ1bmN0aW9uc1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbmV4cG9ydCBmdW5jdGlvbiBidWlsZEVycm9yUmVzcG9uc2VzRm9yUmVkaXJlY3RUb0luZGV4KGluZGV4UGFnZTogc3RyaW5nKTogRXJyb3JSZXNwb25zZVtdIHtcbiAgcmV0dXJuIFtcbiAgICB7XG4gICAgICBodHRwU3RhdHVzOiA0MDMsXG4gICAgICByZXNwb25zZVBhZ2VQYXRoOiBgLyR7aW5kZXhQYWdlfWAsXG4gICAgICByZXNwb25zZUh0dHBTdGF0dXM6IDIwMCxcbiAgICB9LFxuICAgIHtcbiAgICAgIGh0dHBTdGF0dXM6IDQwNCxcbiAgICAgIHJlc3BvbnNlUGFnZVBhdGg6IGAvJHtpbmRleFBhZ2V9YCxcbiAgICAgIHJlc3BvbnNlSHR0cFN0YXR1czogMjAwLFxuICAgIH0sXG4gIF07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBidWlsZEVycm9yUmVzcG9uc2VzRm9yNDA0RXJyb3JQYWdlKGVycm9yUGFnZTogc3RyaW5nKTogRXJyb3JSZXNwb25zZVtdIHtcbiAgcmV0dXJuIFtcbiAgICB7XG4gICAgICBodHRwU3RhdHVzOiA0MDMsXG4gICAgICByZXNwb25zZVBhZ2VQYXRoOiBgLyR7ZXJyb3JQYWdlfWAsXG4gICAgfSxcbiAgICB7XG4gICAgICBodHRwU3RhdHVzOiA0MDQsXG4gICAgICByZXNwb25zZVBhZ2VQYXRoOiBgLyR7ZXJyb3JQYWdlfWAsXG4gICAgfSxcbiAgXTtcbn1cbiJdfQ==